import sys
import transceivers
import signal
import sys
import rpyc
import systemd.daemon
import multiprocessing as mp

class GSServer(rpyc.Service):

    def on_disconnect(self, conn):
        if hasattr(self, 'trx') and self.trx != None:
            self.trx.terminate()
            self.trx.join()
            del self.trx

    def exposed_start_trx(self, name: str):
        trx_inst = getattr(transceivers, name)
        self.trx = mp.Process(target=trx_inst.main)
        self.trx.start()

def main():

    mp.set_start_method("spawn")

    systemd.daemon.notify("READY=1")
    serv = rpyc.ThreadedServer(GSServer(), port=50600)

    def handler(sig=None, frame=None):
        systemd.daemon.notify("STOPPING=1")
        sys.exit(0)
    signal.signal(signal.SIGINT, handler)
    signal.signal(signal.SIGTERM, handler)

    serv.start()


if __name__ == '__main__':
    main()

